name: Build And Deploy

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  
permissions:
  contents: read
  packages: write
  # This is used to complete the identity challenge
  # with sigstore/fulcio when running outside of PRs.
  id-token: write

jobs:
  build:

    runs-on: ubuntu-latest


    steps:
      - name: Checkout repository
        uses: actions/checkout@v3


      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2.9.0
        
      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags:  ${{ env.REGISTRY }}/${{ env.REPO }}:V1
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
  # deploy:
  #   permissions:
  #     contents: none
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     - name: Lowercase the repo name and username
  #       run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
        
  #     - name: multiple command
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USERNAME }}
  #         key: ${{ secrets.KEY }}
  #         port: 22
  #         script_stop: true
  #         sync: true
  #         script: |
  #           echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
  #           docker pull ${{ env.REGISTRY }}/${{ env.REPO }}:${{ github.sha }}
  #           docker rm -f saledress.app | true 
  #           docker run -d -p 12580:80 --name saledress.app ${{ env.REGISTRY }}/${{ env.REPO }}:${{ github.sha }}
